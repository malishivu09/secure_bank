<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc  
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd">   
			
			 <!-- http://www.springframework.org/schema/aop   
       http://www.springframework.org/schema/aop/spring-aop-2.5.xsd -->


<!-- 
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:aop="http://www.springframework.org/schema/aop"  
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:lang="http://www.springframework.org/schema/lang"  
       xsi:schemaLocation="http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd  
       http://www.springframework.org/schema/aop   
       http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">   
       http://www.springframework.org/schema/context  
       http://www.springframework.org/schema/context/spring-context-2.5.xsd  
       http://www.springframework.org/schema/lang  
       http://www.springframework.org/schema/lang/spring-lang-2.5.xsd">  --> 
	<!-- xsi:schemaLocation="http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd" -->

	<mvc:resources mapping="/resources/**" location="/resources/" />


	<!-- Configuring RoleVoter bean to use custom access roles, by default roles 
		should be in the form ROLE_{XXX} -->
	<beans:bean id="roleVoter"
		class="org.springframework.security.access.vote.RoleVoter">
		<beans:property name="rolePrefix" value=""></beans:property>
	</beans:bean>

	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		
		
		<beans:constructor-arg name="decisionVoters"
			ref="roleVoter" />
	</beans:bean>

	<http authentication-manager-ref="jdbc-auth"
		access-decision-manager-ref="accessDecisionManager">
		<intercept-url pattern="/AdminHome/**" access="Admin" />
		<intercept-url pattern="/UserHome/**" access="User" />
		<intercept-url pattern="/InternalHome/**" access="InternalUser" />
		<intercept-url pattern="/MerchantHome/**" access="Merchant" />

		<form-login login-page="/login" authentication-failure-url="/denied"
			username-parameter="username" password-parameter="password"
			authentication-success-handler-ref="roleHandler" />
		<logout invalidate-session="true" logout-success-url="/login"
			logout-url="/j_spring_security_logout" />
		<access-denied-handler error-page="/denied" />
		<session-management invalid-session-url="/login">
			<concurrency-control max-sessions="1"
				expired-url="/login" />
		</session-management>
	</http>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4mappingSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mappingResources">
			<beans:list>
				<beans:value>User.hbm.xml</beans:value>
				<beans:value>Account.hbm.xml</beans:value>
				<beans:value>Mappings.hbm.xml</beans:value>
				<beans:value>Roles.hbm.xml</beans:value>
				<beans:value>Transactions.hbm.xml</beans:value>
				<beans:value>Otp.hbm.xml</beans:value>
			</beans:list>

		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<authentication-manager id="jdbc-auth">
		<authentication-provider>
			<password-encoder ref="encoder" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from user where username = ?"
				authorities-by-username-query="select username,role from roles where username = ?" />
		</authentication-provider>
	</authentication-manager>

	<!--<password-encoder ref="encoder" /> -->

	<!-- MySQL DB DataSource -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/securebanking" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="" />
	</beans:bean>

	<beans:bean id="roleHandler" class="com.asu.edu.controller.RoleHandler">
	</beans:bean>

	<!-- <beans:bean id="myAccount" class="com.asu.edu.daos.AccountHome"> <beans:property 
		name="sessionFactory" ref="mySessionFactory"/> </beans:bean> -->


	<beans:bean id="userHome" class="com.asu.edu.daos.UserHome">
		<beans:property name="sessionFactory" ref="hibernate4mappingSessionFactory" />
	</beans:bean>


	<beans:bean id="accountHome" class="com.asu.edu.daos.AccountHome">
		<beans:property name="sessionFactory" ref="hibernate4mappingSessionFactory" />
	</beans:bean>

	<beans:bean id="transactionsHome" class="com.asu.edu.daos.TransactionsHome">
		<beans:property name="sessionFactory" ref="hibernate4mappingSessionFactory" />
	</beans:bean>

	<beans:bean id="mappingsHome" class="com.asu.edu.daos.MappingsHome">
		<beans:property name="sessionFactory" ref="hibernate4mappingSessionFactory" />
	</beans:bean>
	
	<beans:bean id="rolesHome" class="com.asu.edu.daos.RolesHome">
		<beans:property name="sessionFactory" ref="hibernate4mappingSessionFactory" />
	</beans:bean>
	<beans:bean id="OtpHome" class="com.asu.edu.daos.OtpHome">
		<beans:property name="sessionFactory" ref="hibernate4mappingSessionFactory" />
	</beans:bean>
	
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="hibernate4mappingSessionFactory"></beans:property>
	</beans:bean>


	<beans:bean id="accountService" class="com.asu.edu.services.AccountServiceImpl">
		<beans:property name="accountHome" ref="accountHome"></beans:property>
	</beans:bean>

	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"> 
		<beans:constructor-arg name="strength" value="10" /> </beans:bean>


	<beans:bean id="userService" class="com.asu.edu.services.UserServiceImpl">
		<beans:property name="userHome" ref="userHome"></beans:property>
	</beans:bean>
	
	<beans:bean id="transactionService" class="com.asu.edu.services.TransactionServiceImpl">
		<beans:property name="transactionsHome" ref="transactionsHome"></beans:property>
	</beans:bean>


	<beans:bean id="mappingService" class="com.asu.edu.services.MappingServiceImpl">
		<beans:property name="mappingsHome" ref="mappingsHome"></beans:property>
	</beans:bean>
	
		<beans:bean id="rolesService" class="com.asu.edu.services.RoleServiceImpl">
		<beans:property name="rolesHome" ref="rolesHome"></beans:property>
	</beans:bean>

<beans:bean id="otpService" class="com.asu.edu.services.OtpServiceImpl">
		<beans:property name="otpHome" ref="OtpHome"></beans:property>
	</beans:bean>
	<aop:config>
		<aop:pointcut id="userServicePointCut"
			expression="execution(* com.asu.edu.services.*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="userServicePointCut" />
	</aop:config>


<!-- <beans:bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
 
         setting maximum upload size
        <beans:property name="maxUploadSize" value="100000" />
 
    </beans:bean> -->
    
	<!-- If DataSource is configured in Tomcat Servlet Container -->
	<!-- <beans:bean id="dbDataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
		<beans:property name="jndiName" value="java:comp/env/jdbc/MyLocalDB" /> </beans:bean> -->
</beans:beans>
